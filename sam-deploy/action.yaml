name: SAM Package
description: Build and package using SAM

inputs:
  aws-region:
    description: AWS Region
    required: true

  aws-role-arn:
    description: AWS Role to assume when deploying
    required: true

  force:
    description: Deploy even though the cache was hit
    required: false
    default: 'false'

  bucket:
    description: S3 bucket name
    required: true

  sam-version:
    default: 1.67.0
    description: Version of AWS SAM to use
    required: false

  stack-name:
    description: Name of the stack folder
    required: true

  stack-prefix:
    description: Stack name prefix
    required: false
    default: ''

  template:
    description: Name of the stack folder
    required: true

  timeout:
    description: Approximate duration of longest posible build in seconds
    required: false
    default: '3600'

  variables:
    description: Variable
    required: false
    default: ''

outputs:
  template:
    description: Template file name
    value: ${{ inputs.stack-root }}-template

runs:
  using: composite
  steps:
    - name: Download build
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.template }}

    - name: Deduplicate deploy
      id: cache
      uses: actions/cache@v3
      with:
        path: template.yaml # does not really matter
        key: ${{ inputs.aws-access-key-id }}-${{ inputs.stack-name }}-${{ hashFiles('template.yaml') }}

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Setup SAM
      if: steps.cache.outputs.cache-hit != 'true' || inputs.force == 'true'
      uses: aws-actions/setup-sam@v2
      with:
        version: ${{ inputs.sam-version }}

    - name: SAM fix https://github.com/aws/aws-sam-cli/issues/4527
      run: $(dirname $(readlink $(which sam)))/pip install --force-reinstall "cryptography==38.0.4"
      shell: bash

    - name: Configure AWS credentials
      if: steps.cache.outputs.cache-hit != 'true' || inputs.force == 'true'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ inputs.aws-region }}
        role-duration-seconds: ${{ inputs.timeout }}
        role-session-name: deploy-${{ inputs.stack-prefix }}${{ inputs.stack-name }}
        role-to-assume: ${{ inputs.aws-role-arn }}

    - name: Deploy
      if: steps.cache.outputs.cache-hit != 'true' || inputs.force == 'true'
      run: |
        sam deploy \
          --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND \
          --no-fail-on-empty-changeset \
          --no-confirm-changeset \
          --region ${{ inputs.aws-region }} \
          --parameter-overrides "${{ inputs.variables }}" \
          --s3-bucket ${{ inputs.bucket }} \
          --s3-prefix ${{ inputs.stack-prefix }}${{ inputs.stack-name }} \
          --stack-name ${{ inputs.stack-prefix }}${{ inputs.stack-name }} \
          --template-file template.yaml
      shell: bash
